{
  "version": "v0",
  "revision": "1",
  "commitTime": "1544824316",
  "ui": {
    "label": "Test DAM",
    "description": "Test DAM"
  },
  "trustedIssuers": {
    "test": {
      "issuer": "https://hydra.example.com/",
      "clientId": "00000000-0000-0000-0000-000000000000",
      "ui": {
        "label": "Test",
        "description": "Fake OIDC Issuer for testing"
      }
    },
    "ic_dev": {
      "issuer": "https://ic-dev-dot-hcls-data-connect-demo.appspot.com/oidc",
      "ui": {
        "label": "IC Dev",
        "description": "IC Dev passport issuer"
      }
    },
    "ic_staging": {
      "issuer": "https://ic-staging-dot-hcls-data-connect-demo.appspot.com/oidc",
      "ui": {
        "label": "IC Staging",
        "description": "IC Staging passport issuer"
      }
    },
    "ic_prod": {
      "issuer": "https://ic-prod-dot-hcls-data-connect-demo.appspot.com/oidc",
      "ui": {
        "label": "IC Prod",
        "description": "IC Prod passport issuer"
      }
    },
    "dbGaP": {
      "issuer": "https://dbgap.nlm.nih.gov/aa",
      "translateUsing": "dbgap_translator",
      "ui": {
        "label": "dbGaP passport issuer",
        "description": "dbGaP passport issuer"
      }
    },
    "elixir": {
      "issuer": "https://login.elixir-czech.org/oidc/",
      "ui": {
        "label": "elixir passport issuer",
        "description": "elixir passport issuer"
      }
    },
    "nih": {
      "issuer": "https://login.nih.gov/oidc/",
      "translateUsing": "dbgap_translator",
      "ui": {
        "label": "nih passport issuer",
        "description": "nih passport issuer"
      }
    },
    "testBroker": {
      "issuer": "https://hydra.example.com/",
      "authUrl": "https://hydra.example.com/authorize",
      "tokenUrl": "https://hydra.example.com/token",
      "clientId": "00000000-0000-0000-0000-000000000000",
      "ui": {
        "label": "Local IC Dev",
        "description": "Local IC Dev passport issuer"
      }
    }
  },
  "trustedSources": {
    "nih_institutes": {
      "sources": [
        "https://example.org/oidc",
        "https://dbgap.nlm.nih.gov/aa",
        "https://nci.nih.gov",
        "https://institute1.nih.gov",
        "https://institute2.nih.gov",
        "https://institute3.nih.gov",
        "https://institute4.nih.gov"
      ],
      "ui": {
        "label": "nih institutes",
        "description": "nih institutes visa source"
      }
    },
    "the_broad": {
      "sources": [
        "https://example.org/oidc",
        "https://ga4gh.broadinstitute.org"
      ],
      "ui": {
        "label": "the broad",
        "description": "the broad visa source"
      }
    },
    "elixir_institutes": {
      "sources": [
        "https://example.org/oidc",
        "https://ga4gh.elixir-czech.org/visas"
      ],
      "visaTypes": [
        "ResearcherStatus",
        "LinkedIdentities"
      ],
      "ui": {
        "label": "elixir institutes",
        "description": "elixir institutes visa source"
      }
    },
    "eu_universities": {
      "sources": [
        "https://example.org/oidc",
        "https://example.edu"
      ],
      "visaTypes": [
        "AcceptedTermsAndPolicies",
        "AffiliationAndRole",
        "ResearcherStatus"
      ],
      "ui": {
        "label": "eu universities",
        "description": "eu universities visa source"
      }
    },
    "us_universities": {
      "sources": [
        "https://example.org/oidc",
        "https://ga4gh.stanford.edu/visas"
      ],
      "visaTypes": [
        "AcceptedTermsAndPolicies",
        "ResearcherStatus"
      ],
      "ui": {
        "label": "us universities",
        "description": "us universities visa source"
      }
    },
    "research_companies": {
      "sources": [
        "https://example.org/oidc",
        "https://ga4gh.google.com/visas",
        "https://ga4gh.dnastack.com/visas"
      ],
      "visaTypes": [
        "AcceptedTermsAndPolicies",
        "ResearcherStatus"
      ],
      "ui": {
        "label": "research companies",
        "description": "research companies visa source"
      }
    }
  },
  "policies": {
    "bona_fide": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "ResearcherStatus",
              "value": "split_pattern:https://doi.org/10.1038/s41431-018-0219-y;http://www.ga4gh.org/beacon/ResearcherStatus/ver1.0",
              "source": "split_pattern:elixir_institutes;nih_institutes;eu_universities;us_universities;research_companies"
            }
          ]
        },
        {
          "allOf": [
            {
              "type": "AcceptedTermsAndPolicies",
              "value": "const:https://librarycard.broadinstitute.org/v1",
              "source": "split_pattern:the_broad"
            }
          ]
        }
      ],
      "ui": {
        "label": "Bona Fide",
        "description": "NIH custom Bona Fide reseacher status that makes use of Registered Access Bona Fide status and/or Library Cards",
        "infoUrl": "https://doi.org/10.1038/s41431-018-0219-y#Sec6"
      }
    },
    "ethics": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "AcceptedTermsAndPolicies",
              "value": "const:https://doi.org/10.1038/s41431-018-0219-y",
              "by": "split_pattern:self;so"
            }
          ]
        }
      ],
      "ui": {
        "label": "Researcher Ethics Agreement",
        "description": "Based on Registered Access ethics terms",
        "infoUrl": "https://doi.org/10.1038/s41431-018-0219-y#figure-1"
      }
    },
    "dac": {
      "anyOf": [
        {
          "allOf": [
            {
              "type": "ControlledAccessGrants",
              "value": "const:https://dac.nih.gov/datasets/${DATASET}",
              "source": "split_pattern:nih_institutes",
              "by": "const:dac"
            }
          ]
        }
      ],
      "variableDefinitions": {
        "DATASET": {
          "regexp": "^phs\\d{6}$",
          "ui": {
            "description": "The name of an NIH dataset of the form 'phsXXXXXX'"
          }
        }
      },
      "ui": {
        "label": "Data Access Committee Approval",
        "description": "Approval from a DAC for the researcher to access specific datasets",
        "infoUrl": "https://osp.od.nih.gov/scientific-sharing/policy-oversight/"
      }
    }
  },
  "resources": {
    "dataset_example": {
      "views": {
        "bq_read": {
          "serviceTemplate": "bigquery",
          "labels": {
            "version": "dataset v1",
            "topic": "FHIR",
            "partition": "all",
            "fidelity": "normalized",
            "geoLocation": "gcp:na/us/us-central1/us-central1-b"
          },
          "contentTypes": [
            "text/csv"
          ],
          "items": [
            {
              "args": {
                "project": "dataset-example-project",
                "dataset": "dataset-example-view1"
              }
            }, {
              "args": {
                "project": "dataset-example-project",
                "dataset": "dataset-example-view2"
              }
            }
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name":"dac",
                  "args": {
                    "DATASET": "phs000710"
                  }
                }
              ]
            }
          },
          "defaultRole": "viewer",
          "ui": {
            "label": "BigQuery Read",
            "description": "GCP BigQuery Read"
          }
        },
        "gcs_read": {
          "serviceTemplate": "gcs",
          "labels": {
            "version": "dataset v1",
            "topic": "FHIR",
            "partition": "all",
            "fidelity": "normalized",
            "geoLocation": "gcp:na/us/us-central1/us-central1-b"
          },
          "contentTypes": [
            "application/bam"
          ],
          "items": [
            {
              "args": {
                "project": "dataset-example-project",
                "bucket": "dataset-example-bucket1"
              }
            }, {
              "args": {
                "project": "dataset-example-project",
                "bucket": "dataset-example-bucket2"
              }
            }
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name": "dac",
                  "args": {
                    "DATASET": "phs000710"
                  }
                }
              ]
            }
          },
          "defaultRole": "viewer",
          "ui": {
            "label": "File Read",
            "description": "GCS File Read"
          }
        },
        "gcs_payer": {
          "serviceTemplate": "gcs",
          "labels": {
            "version": "dataset v1",
            "topic": "FHIR",
            "partition": "all",
            "fidelity": "normalized",
            "geoLocation": "gcp:na/us/us-central1/us-central1-b"
          },
          "contentTypes": [
            "application/bam"
          ],
          "items": [
            {
              "args": {
                "project": "dataset-example-project",
                "bucket": "dataset-example-payer-bucket1",
                "type": "requester-pays"
              }
            }, {
              "args": {
                "project": "dataset-example-project",
                "bucket": "dataset-example-payer-bucket2",
                "type": "requester-pays"
              }
            }
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name": "dac",
                  "args": {
                    "DATASET": "phs000710"
                  }
                }
              ]
            }
          },
          "defaultRole": "viewer",
          "ui": {
            "label": "File Requster Pays Read",
            "description": "GCS Requester Pays File Read"
          }
        },
        "gcp": {
          "serviceTemplate": "views",
          "labels": {
            "version": "dataset v1",
            "topic": "FHIR",
            "partition": "all",
            "fidelity": "normalized",
            "geoLocation": "gcp:na/us/us-central1"
          },
          "contentTypes": [
            "application/bam"
          ],
          "items": [
            {
              "args": {
                "resource": "dataset_example",
                "view": "bq_read"
              }
            }, {
              "args": {
                "resource": "dataset_example",
                "view": "gcs_read"
              }
            }
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name": "dac",
                  "args": {
                    "DATASET": "phs000711"
                  }
                }
              ]
            }
          },
          "defaultRole": "viewer",
          "ui": {
            "label": "GCP GCS and BigQuery",
            "description": "GCP GCS and BigQuery"
          }
        }
      },
      "maxTokenTtl": "3h",
      "ui": {
        "applyUrl": "https://www.dataset-example.nih.gov/apply",
        "description": "Records from U.S. citizens",
        "imageUrl": "https://dataset-example.nih.org/images/image.jpg",
        "infoUrl": "https://dataset-example.nih.gov",
        "label": "Dataset Example",
        "troubleshootUrl": "https://dataset-example.nih.gov/about/dataset-example-program-protocol"
      }
    },
    "ga4gh-apis": {
      "views": {
        "beacon": {
          "serviceTemplate": "beacon",
          "labels": {
            "version": "Phase 3",
            "topic": "variants",
            "partition": "all",
            "fidelity": "discovery",
            "geoLocation": "gcp:na/us/us-central1/us-central1-a"
          },
          "contentTypes": [
            "application/bam"
          ],
          "items": [
            {
              "args": {
                "aud": "https://ga4gh-apis-beacon.dnastack.com",
                "url": "https://gatekeeper-cafe-variome.staging.dnastack.com/beacon/query"
              }
            }
          ],
          "roles": {
            "discovery": {
              "policies": [
                {"name":"bona_fide"}
              ]
            }
          },
          "defaultRole": "discovery",
          "ui":{
            "label": "Beacon Discovery",
            "description": "Search data from Beacon Discovery"
          }
        },
        "gcs_read": {
          "serviceTemplate": "gcs",
          "labels": {
            "version": "Phase 3",
            "topic": "variants",
            "partition": "all",
            "fidelity": "normalized",
            "geoLocation": "gcp:na/us/us-central1/us-central1-a"
          },
          "contentTypes": [
            "application/bam"
          ],
          "items": [
            {
              "args": {
                "project": "ga4gh-apis",
                "bucket": "ga4gh-apis-controlled-access"
              }
            }
          ],
          "roles": {
            "viewer": {
              "policies": [
                {"name":"bona_fide"}, {"name":"ethics"}
              ]
            }
          },
          "defaultRole": "viewer",
          "ui": {
            "label": "File Read",
            "description": "GCS File Read"
          }
        },
        "s3-test": {
          "serviceTemplate": "awsstorage",
          "labels": {
            "version": "Phase 2"
          },
          "contentTypes": [],
          "items": [
            {
              "args": {
                "bucket": "example-bucket-name"
              }
            }
          ],
          "roles": {
            "viewer": {
              "policies": [
                {
                  "name": "bona_fide"
                }
              ]
            }
          },
          "defaultRole": "viewer",
          "ui": {
            "label": "S3 bucket view",
            "description": "S3 bucket view"
          }
        },
        "redshift-test": {
          "serviceTemplate": "redshift",
          "labels": {
            "version": "test"
          },
          "contentTypes": [],
          "roles": {
            "dbuser": {
              "policies": [
                {
                  "name": "bona_fide"
                }
              ]
            }
          },
          "items": [
            {
              "args": {
                "cluster": "arn:aws:redshift:us-east-1:582623027427:cluster:example-cluster-name",
                "group": "arn:aws:redshift:us-east-1:582623027427:dbgroup:example-cluster-name/admin"
              }
            }
          ],
          "defaultRole": "dbuser",
          "ui": {
            "description": "redshift view",
            "label": "redshift view"
          }
        }
      },
      "maxTokenTtl": "1h",
      "ui": {
        "applyUrl": "http://apply.ga4gh-apis.org",
        "description": "Google demo of GA4GH APIs",
        "imageUrl": "https://info.ga4gh-apis.org/images/image.jpg",
        "infoUrl": "http://info.ga4gh-apis.org",
        "label": "GA4GH APIs",
        "troubleshootUrl": "http://troubleshoot.ga4gh-apis.org"
      }
    }
  },
  "serviceTemplates": {
    "beacon": {
      "serviceName": "gatekeeper",
      "roles" : {
        "basic_discovery": {
          "serviceArgs": {
            "scopes": { "values": ["registered"] }
          },
          "damRoleCategories": ["exists"],
          "ui": {
            "label": "Discovery Beacon Search without Metadata",
            "description": "Query genome data and return 'found' or 'not found' status"
          }
        },
        "discovery": {
          "serviceArgs": {
            "scopes": { "values": ["registered", "controlled"] }
          },
          "damRoleCategories": ["metadata"],
          "ui": {
            "label": "Discovery Beacon Search with Metadata",
            "description": "Query genome data and receive metadata results"
          }
        }
      },
      "interfaces": {
        "http:beacon": "${url}"
      },
      "ui": {
        "label": "Beacon Discovery Search",
        "description": "Query genome data from Beacon Discovery"
      }
    },
    "gcs": {
      "serviceName": "gcs",
      "roles": {
        "viewer": {
          "serviceArgs": {
            "roles": { "values": ["roles/storage.objectViewer"] }
          },
          "damRoleCategories": ["metadata", "list", "read"],
          "ui": {
            "label": "File Viewer",
            "description": "List and read files"
          }
        },
        "creator": {
          "serviceArgs": {
            "roles": { "values": ["roles/storage.objectCreator"] }
          },
          "damRoleCategories": ["write"],
          "ui": {
            "label": "File Creator",
            "description": "Write files (without read access)"
          }
        },
        "editor": {
          "serviceArgs": {
            "roles": {
              "values": [
                "roles/storage.objectViewer",
                "roles/storage.objectCreator"
              ]
            }
          },
          "damRoleCategories": ["metadata", "list", "read", "write"],
          "ui": {
            "label": "File Editor",
            "description": "Read and write files plus manipulate file metadata"
          }
        }
      },
      "interfaces": {
        "gcp:gs": "gs://${bucket}",
        "http:gcp:gs": "https://www.googleapis.com/storage/v1/b/${bucket}"
      },
      "ui": {
        "label": "Google Cloud Storage",
        "description": "Offers Google Cloud Storage access"
      }
    },
    "bigquery": {
      "serviceName": "bigquery",
      "roles": {
        "viewer": {
          "serviceArgs": {
            "roles": { "values": ["roles/BQReader"] }
          },
          "damRoleCategories": ["metadata", "list", "read"],
          "ui": {
            "label": "BigQuery Viewer",
            "description": "Query tables and view table metadata"
          }
        },
        "editor": {
          "serviceArgs": {
            "roles": { "values": ["roles/bigquery.dataEditor"] }
          },
          "damRoleCategories": ["metadata", "list", "read", "write"],
          "ui": {
            "label": "BigQuery Editor",
            "description": "Query and modify tables and table metadata"
          }
        }
      },
      "interfaces": {
        "http:gcp:bq": "https://www.googleapis.com/bigquery/v1/projects/${project}"
      },
      "ui": {
        "label": "Google BigQuery",
        "description": "Offers Google BigQuery access"
      }
    },
    "views": {
      "serviceName": "aggregator",
      "roles": {
        "viewer": {
          "damRoleCategories": ["metadata", "list", "read"],
          "ui": {
            "label": "Viewer",
            "description": "Offers Viewer access across multiple views"
          }
        }
      },
      "ui": {
        "label": "Multiple Resource Views",
        "description": "Offers Resource Viewer access across multiple views"
      }
    },
    "awsstorage": {
      "serviceName": "s3bucket",
      "roles": {
        "viewer": {
          "serviceArgs": {
            "roles": {
              "values": [
                "s3:GetObject"
              ]
            }
          },
          "damRoleCategories": [
            "metadata",
            "list",
            "read"
          ],
          "ui": {
            "description": "List and read files",
            "label": "File Viewer"
          }
        }
      },
      "interfaces": {
        "http:aws:s3": "https://s3.amazonaws.com/${bucket}"
      },
      "ui": {
        "label": "AWS S3",
        "description": "Offers AWS S3 access"
      }
    },
    "redshift": {
      "serviceName": "redshift",
      "interfaces": {
        "http:aws:redshift:arn": "${cluster}"
      },
      "roles": {
        "dbuser": {
          "serviceArgs": {
            "roles": {
              "values": [
                "redshift:GetClusterCredentials",
                "redshift:CreateClusterUser",
                "redshift:JoinGroup"
              ]
            }
          },
          "damRoleCategories": [
            "metadata",
            "list",
            "read"
          ],
          "ui": {
            "description": "Ability to login as new user with group",
            "label": "Ability to Get DB Credentials"
          }
        }
      },
      "ui": {
        "description": "Offers AWS Redshift Access",
        "label": "AWS Redshift"
      }
    }
  },
  "visaTypes": {
    "AffiliationAndRole": {
      "ui": {
        "label": "Affiliation and Role",
        "description": "The Identity’s roles within affiliated institutions as specified by eduPerson with specific vocabulary extensions",
        "infoUrl": "https://bit.ly/ga4gh-passport-v1#affiliationandrole"
      }
    },
    "AcceptedTermsAndPolicies": {
      "ui": {
        "label": "Accepted Terms and Policies",
        "description": "Canonical URLs that indicate that a researcher or either organization has acknowledged the specific terms and conditions indicated by the URL",
        "infoUrl": "https://bit.ly/ga4gh-passport-v1#acceptedtermsandpolicies"
      }
    },
    "ResearcherStatus": {
      "ui": {
        "label": "Bona Fide Researcher Status",
        "description": "Canonical URLs that indicate that the person has been acknowledged to be a bona fide researcher",
        "infoUrl": "https://bit.ly/ga4gh-passport-v1#researcherstatus"
      }
    },
    "ControlledAccessGrants": {
      "ui": {
        "label": "Controlled Access Grants",
        "description": "A list of datasets or other objects for which controlled access has been granted to this researcher",
        "infoUrl": "https://bit.ly/ga4gh-passport-v1#controlledaccessgrants"
      }
    },
    "LinkedIdentities": {
      "ui": {
        "label": "Linked Identities",
        "description": "The value of this visa lists multiple identities that are the same person as Passport Visa Identity (i.e. identity as indicated by the visa's issuer and subject claims)",
        "infoUrl": "https://bit.ly/ga4gh-passport-v1#linkedidentities"
      }
    }
  },
  "testPersonas": {
    "non-admin": {
      "ui": {
        "label": "Non Admin"
      },
      "passport": {
        "standardClaims": {
          "iss": "https://ic-dot-example.appspot.com/oidc",
          "email": "non-admin@faculty.example.edu"
        },
        "ga4ghAssertions": []
      }
    },
    "admin": {
      "ui": {
        "label": "Admin"
      },
      "passport": {
        "standardClaims": {
          "iss": "https://ic-dot-example.appspot.com/oidc",
          "email": "admin@faculty.example.edu"
        },
        "ga4ghAssertions": []
      }
    },
    "dr_joe_elixir": {
      "ui": {
        "label": "Dr. Joe (Elixir)"
      },
      "passport": {
        "standardClaims": {
          "iss": "https://login.elixir-czech.org/oidc/",
          "email": "dr_joe@faculty.example.edu",
          "picture": "/identity/static/images/elixir_identity.png",
          "patient": "jane",
          "fhirUser": "dr_joe"
        },
        "ga4ghAssertions": [
          {
            "type": "ResearcherStatus",
            "source": "https://example.edu",
            "value": "https://doi.org/10.1038/s41431-018-0219-y",
            "assertedDuration": "1d",
            "expiresDuration": "30d",
            "by": "peer"
          },
          {
            "type": "AcceptedTermsAndPolicies",
            "source": "https://example.edu",
            "value": "https://doi.org/10.1038/s41431-018-0219-y",
            "assertedDuration": "1d",
            "expiresDuration": "30d",
            "by": "self"
          }
        ]
      },
      "access" : [
        "ga4gh-apis/beacon/discovery",
        "ga4gh-apis/gcs_read/viewer",
        "ga4gh-apis/redshift-test/dbuser",
        "ga4gh-apis/s3-test/viewer"
      ]
    },
    "dr_joe_era_commons": {
      "ui": {
        "label": "Dr. Joe (eRA Commons)"
      },
      "passport": {
        "standardClaims": {
          "iss": "https://login.nih.gov/oidc/",
          "email": "dr_joe@era.nih.gov",
          "picture": "/identity/static/images/era_commons_identity.jpeg"
        },
        "ga4ghAssertions": [
          {
            "type": "AffiliationAndRole",
            "source": "https://example.edu",
            "value": "faculty@example.edu",
            "assertedDuration": "1d",
            "expiresDuration": "30d",
            "by": "so"
          },
          {
            "type": "ControlledAccessGrants",
            "source": "https://dbgap.nlm.nih.gov/aa",
            "value": "https://dac.nih.gov/datasets/phs000710",
            "assertedDuration": "1d",
            "expiresDuration": "30d",
            "by": "dac",
            "anyOfConditions": [
              {
                "allOf": [
                  {
                    "type": "AffiliationAndRole",
                    "value": "const:faculty@example.edu",
                    "by": "const:so"
                  }
                ]
              }
            ]
          }
        ]
      },
      "access": [
        "dataset_example/bq_read/viewer",
        "dataset_example/gcs_payer/viewer",
        "dataset_example/gcs_read/viewer"
      ]
    }
  },
  "clients": {
    "test_client": {
      "clientId": "00000000-0000-0000-0000-000000000000",
      "ui": {
        "label": "Test Client",
        "description": "Unit test client"
      },
      "redirectUris": [
        "http://example.com"
      ],
      "scope": "openid offline ga4gh_passport_v1 profile email identities account_admin sync",
      "grantTypes": ["authorization_code", "refresh_token"],
      "responseTypes": ["token", "code", "id_token"]
    },
    "test_client2": {
      "clientId": "00000000-0000-0000-0000-000000000002",
      "ui": {
        "label": "Test Client",
        "description": "Unit test client 2"
      },
      "redirectUris": [
        "http://example.com"
      ],
      "scope": "openid offline ga4gh_passport_v1 profile email identities account_admin",
      "grantTypes": ["authorization_code"],
      "responseTypes": ["token", "code", "id_token"]
    }
  },
  "options": {
    "readOnlyMasterRealm": true,
    "gcpManagedKeysMaxRequestedTtl": "7d",
    "gcpManagedKeysPerAccount": 8,
    "gcpServiceAccountProject": "example-project-id"
  }
}
