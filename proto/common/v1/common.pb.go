// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: proto/common/v1/common.proto

// Package com defines messages shared between IC and DAM server.

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Step Of login flow.
type LoginState_Step int32

const (
	LoginState_LOGIN   LoginState_Step = 0
	LoginState_CONSENT LoginState_Step = 1
)

// Enum value maps for LoginState_Step.
var (
	LoginState_Step_name = map[int32]string{
		0: "LOGIN",
		1: "CONSENT",
	}
	LoginState_Step_value = map[string]int32{
		"LOGIN":   0,
		"CONSENT": 1,
	}
)

func (x LoginState_Step) Enum() *LoginState_Step {
	p := new(LoginState_Step)
	*p = x
	return p
}

func (x LoginState_Step) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginState_Step) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_v1_common_proto_enumTypes[0].Descriptor()
}

func (LoginState_Step) Type() protoreflect.EnumType {
	return &file_proto_common_v1_common_proto_enumTypes[0]
}

func (x LoginState_Step) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginState_Step.Descriptor instead.
func (LoginState_Step) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{10, 0}
}

type Descriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label        string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Description  string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Regexp       string   `protobuf:"bytes,3,opt,name=regexp,proto3" json:"regexp,omitempty"`
	Type         string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	IsList       bool     `protobuf:"varint,5,opt,name=is_list,json=isList,proto3" json:"is_list,omitempty"`
	EnumValues   []string `protobuf:"bytes,6,rep,name=enum_values,json=enumValues,proto3" json:"enum_values,omitempty"`
	Min          string   `protobuf:"bytes,7,opt,name=min,proto3" json:"min,omitempty"`
	Max          string   `protobuf:"bytes,8,opt,name=max,proto3" json:"max,omitempty"`
	DefaultValue string   `protobuf:"bytes,9,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *Descriptor) Reset() {
	*x = Descriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Descriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Descriptor) ProtoMessage() {}

func (x *Descriptor) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Descriptor.ProtoReflect.Descriptor instead.
func (*Descriptor) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *Descriptor) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Descriptor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Descriptor) GetRegexp() string {
	if x != nil {
		return x.Regexp
	}
	return ""
}

func (x *Descriptor) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Descriptor) GetIsList() bool {
	if x != nil {
		return x.IsList
	}
	return false
}

func (x *Descriptor) GetEnumValues() []string {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

func (x *Descriptor) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *Descriptor) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

func (x *Descriptor) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	By     string `protobuf:"bytes,4,opt,name=by,proto3" json:"by,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Condition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Condition) GetBy() string {
	if x != nil {
		return x.By
	}
	return ""
}

type ConditionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllOf []*Condition `protobuf:"bytes,1,rep,name=all_of,json=allOf,proto3" json:"all_of,omitempty"`
}

func (x *ConditionSet) Reset() {
	*x = ConditionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionSet) ProtoMessage() {}

func (x *ConditionSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionSet.ProtoReflect.Descriptor instead.
func (*ConditionSet) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *ConditionSet) GetAllOf() []*Condition {
	if x != nil {
		return x.AllOf
	}
	return nil
}

type Assertion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source           string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Value            string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	AssertedDuration string `protobuf:"bytes,4,opt,name=asserted_duration,json=assertedDuration,proto3" json:"asserted_duration,omitempty"`
	ExpiresDuration  string `protobuf:"bytes,5,opt,name=expires_duration,json=expiresDuration,proto3" json:"expires_duration,omitempty"`
	// Disjunction of Conjunctions (OR of ANDs).
	// If at least one of these ConditionSets evaluates to true, then the
	// conditions on this assertion have been met.
	AnyOfConditions []*ConditionSet `protobuf:"bytes,6,rep,name=any_of_conditions,json=anyOfConditions,proto3" json:"any_of_conditions,omitempty"`
	By              string          `protobuf:"bytes,7,opt,name=by,proto3" json:"by,omitempty"`
	Asserted        int64           `protobuf:"varint,8,opt,name=asserted,proto3" json:"asserted,omitempty"`
	Exp             int64           `protobuf:"varint,9,opt,name=exp,proto3" json:"exp,omitempty"`
}

func (x *Assertion) Reset() {
	*x = Assertion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assertion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assertion) ProtoMessage() {}

func (x *Assertion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assertion.ProtoReflect.Descriptor instead.
func (*Assertion) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *Assertion) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Assertion) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Assertion) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Assertion) GetAssertedDuration() string {
	if x != nil {
		return x.AssertedDuration
	}
	return ""
}

func (x *Assertion) GetExpiresDuration() string {
	if x != nil {
		return x.ExpiresDuration
	}
	return ""
}

func (x *Assertion) GetAnyOfConditions() []*ConditionSet {
	if x != nil {
		return x.AnyOfConditions
	}
	return nil
}

func (x *Assertion) GetBy() string {
	if x != nil {
		return x.By
	}
	return ""
}

func (x *Assertion) GetAsserted() int64 {
	if x != nil {
		return x.Asserted
	}
	return 0
}

func (x *Assertion) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

// VisaRejection is filled in by a policy engine to understand why a visa was
// rejected. Visas unrelated to the policy are not considered rejected unless
// they are not trusted.
type VisaRejection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason      string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Field       string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *VisaRejection) Reset() {
	*x = VisaRejection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisaRejection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisaRejection) ProtoMessage() {}

func (x *VisaRejection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisaRejection.ProtoReflect.Descriptor instead.
func (*VisaRejection) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{4}
}

func (x *VisaRejection) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *VisaRejection) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *VisaRejection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// RejectedVisa provides insight into why a policy engine is not making use of
// visas that are present within the passport.
type RejectedVisa struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenFormat string         `protobuf:"bytes,1,opt,name=token_format,json=tokenFormat,proto3" json:"token_format,omitempty"`
	Issuer      string         `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject     string         `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Assertion   *Assertion     `protobuf:"bytes,4,opt,name=assertion,proto3" json:"assertion,omitempty"`
	Rejection   *VisaRejection `protobuf:"bytes,5,opt,name=rejection,proto3" json:"rejection,omitempty"`
}

func (x *RejectedVisa) Reset() {
	*x = RejectedVisa{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectedVisa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedVisa) ProtoMessage() {}

func (x *RejectedVisa) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedVisa.ProtoReflect.Descriptor instead.
func (*RejectedVisa) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{5}
}

func (x *RejectedVisa) GetTokenFormat() string {
	if x != nil {
		return x.TokenFormat
	}
	return ""
}

func (x *RejectedVisa) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *RejectedVisa) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *RejectedVisa) GetAssertion() *Assertion {
	if x != nil {
		return x.Assertion
	}
	return nil
}

func (x *RejectedVisa) GetRejection() *VisaRejection {
	if x != nil {
		return x.Rejection
	}
	return nil
}

// RejectedPolicy provides insight into why a policy engine is rejecct a
// passport for a visa.
type RejectedPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rejections        int32           `protobuf:"varint,1,opt,name=rejections,proto3" json:"rejections,omitempty"`
	RejectedVisas     []*RejectedVisa `protobuf:"bytes,2,rep,name=rejected_visas,json=rejectedVisas,proto3" json:"rejected_visas,omitempty"`
	PolicyBasis       []string        `protobuf:"bytes,3,rep,name=policy_basis,json=policyBasis,proto3" json:"policy_basis,omitempty"`
	RequestedResource string          `protobuf:"bytes,4,opt,name=requested_resource,json=requestedResource,proto3" json:"requested_resource,omitempty"`
	Message           string          `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RejectedPolicy) Reset() {
	*x = RejectedPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectedPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedPolicy) ProtoMessage() {}

func (x *RejectedPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedPolicy.ProtoReflect.Descriptor instead.
func (*RejectedPolicy) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{6}
}

func (x *RejectedPolicy) GetRejections() int32 {
	if x != nil {
		return x.Rejections
	}
	return 0
}

func (x *RejectedPolicy) GetRejectedVisas() []*RejectedVisa {
	if x != nil {
		return x.RejectedVisas
	}
	return nil
}

func (x *RejectedPolicy) GetPolicyBasis() []string {
	if x != nil {
		return x.PolicyBasis
	}
	return nil
}

func (x *RejectedPolicy) GetRequestedResource() string {
	if x != nil {
		return x.RequestedResource
	}
	return ""
}

func (x *RejectedPolicy) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Passport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StandardClaims         map[string]string `protobuf:"bytes,1,rep,name=standard_claims,json=standardClaims,proto3" json:"standard_claims,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ga4GhAssertions        []*Assertion      `protobuf:"bytes,2,rep,name=ga4gh_assertions,json=ga4ghAssertions,proto3" json:"ga4gh_assertions,omitempty"`
	InternalEncryptedVisas [][]byte          `protobuf:"bytes,11,rep,name=internal_encrypted_visas,json=internalEncryptedVisas,proto3" json:"internal_encrypted_visas,omitempty"`
	ExtraScopes            string            `protobuf:"bytes,3,opt,name=extra_scopes,json=extraScopes,proto3" json:"extra_scopes,omitempty"`
}

func (x *Passport) Reset() {
	*x = Passport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Passport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Passport) ProtoMessage() {}

func (x *Passport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Passport.ProtoReflect.Descriptor instead.
func (*Passport) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{7}
}

func (x *Passport) GetStandardClaims() map[string]string {
	if x != nil {
		return x.StandardClaims
	}
	return nil
}

func (x *Passport) GetGa4GhAssertions() []*Assertion {
	if x != nil {
		return x.Ga4GhAssertions
	}
	return nil
}

func (x *Passport) GetInternalEncryptedVisas() [][]byte {
	if x != nil {
		return x.InternalEncryptedVisas
	}
	return nil
}

func (x *Passport) GetExtraScopes() string {
	if x != nil {
		return x.ExtraScopes
	}
	return ""
}

type TestPersona struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passport *Passport         `protobuf:"bytes,1,opt,name=passport,proto3" json:"passport,omitempty"`
	Access   []string          `protobuf:"bytes,2,rep,name=access,proto3" json:"access,omitempty"`
	Ui       map[string]string `protobuf:"bytes,3,rep,name=ui,proto3" json:"ui,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TestPersona) Reset() {
	*x = TestPersona{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestPersona) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestPersona) ProtoMessage() {}

func (x *TestPersona) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestPersona.ProtoReflect.Descriptor instead.
func (*TestPersona) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{8}
}

func (x *TestPersona) GetPassport() *Passport {
	if x != nil {
		return x.Passport
	}
	return nil
}

func (x *TestPersona) GetAccess() []string {
	if x != nil {
		return x.Access
	}
	return nil
}

func (x *TestPersona) GetUi() map[string]string {
	if x != nil {
		return x.Ui
	}
	return nil
}

type Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    string                                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Revision   int64                                  `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	CommitTime float64                                `protobuf:"fixed64,3,opt,name=commit_time,json=commitTime,proto3" json:"commit_time,omitempty"`
	Users      map[string]*Permissions_PermissionUser `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{9}
}

func (x *Permissions) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Permissions) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Permissions) GetCommitTime() float64 {
	if x != nil {
		return x.CommitTime
	}
	return 0
}

func (x *Permissions) GetUsers() map[string]*Permissions_PermissionUser {
	if x != nil {
		return x.Users
	}
	return nil
}

// LoginState records states for login and login callback.
type LoginState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step             LoginState_Step `protobuf:"varint,1,opt,name=step,proto3,enum=common.LoginState_Step" json:"step,omitempty"`
	Provider         string          `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Realm            string          `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	LoginChallenge   string          `protobuf:"bytes,4,opt,name=login_challenge,json=loginChallenge,proto3" json:"login_challenge,omitempty"`
	Subject          string          `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Scope            string          `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	LoginHint        string          `protobuf:"bytes,7,opt,name=login_hint,json=loginHint,proto3" json:"login_hint,omitempty"`
	ConsentChallenge string          `protobuf:"bytes,8,opt,name=consent_challenge,json=consentChallenge,proto3" json:"consent_challenge,omitempty"`
	Audience         []string        `protobuf:"bytes,9,rep,name=audience,proto3" json:"audience,omitempty"`
	ClientName       string          `protobuf:"bytes,10,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
}

func (x *LoginState) Reset() {
	*x = LoginState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginState) ProtoMessage() {}

func (x *LoginState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginState.ProtoReflect.Descriptor instead.
func (*LoginState) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{10}
}

func (x *LoginState) GetStep() LoginState_Step {
	if x != nil {
		return x.Step
	}
	return LoginState_LOGIN
}

func (x *LoginState) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *LoginState) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *LoginState) GetLoginChallenge() string {
	if x != nil {
		return x.LoginChallenge
	}
	return ""
}

func (x *LoginState) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *LoginState) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *LoginState) GetLoginHint() string {
	if x != nil {
		return x.LoginHint
	}
	return ""
}

func (x *LoginState) GetConsentChallenge() string {
	if x != nil {
		return x.ConsentChallenge
	}
	return ""
}

func (x *LoginState) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *LoginState) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

type TokenMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IssuedAt string `protobuf:"bytes,2,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	Expires  string `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
}

func (x *TokenMetadata) Reset() {
	*x = TokenMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenMetadata) ProtoMessage() {}

func (x *TokenMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenMetadata.ProtoReflect.Descriptor instead.
func (*TokenMetadata) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{11}
}

func (x *TokenMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenMetadata) GetIssuedAt() string {
	if x != nil {
		return x.IssuedAt
	}
	return ""
}

func (x *TokenMetadata) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

type CliState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email           string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	ClientId        string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scope           string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	AuthUrl         string                 `protobuf:"bytes,5,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Nonce           string                 `protobuf:"bytes,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	EncryptedSecret []byte                 `protobuf:"bytes,9,opt,name=encrypted_secret,json=encryptedSecret,proto3" json:"encrypted_secret,omitempty"`
	EncryptedCode   []byte                 `protobuf:"bytes,10,opt,name=encrypted_code,json=encryptedCode,proto3" json:"encrypted_code,omitempty"`
	Secret          string                 `protobuf:"bytes,11,opt,name=secret,proto3" json:"secret,omitempty"`
	AccessToken     string                 `protobuf:"bytes,12,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken    string                 `protobuf:"bytes,13,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	State           string                 `protobuf:"bytes,14,opt,name=state,proto3" json:"state,omitempty"`
	AcceptedAt      *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	UserProfile     map[string]string      `protobuf:"bytes,16,rep,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CliState) Reset() {
	*x = CliState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliState) ProtoMessage() {}

func (x *CliState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliState.ProtoReflect.Descriptor instead.
func (*CliState) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{12}
}

func (x *CliState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CliState) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CliState) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CliState) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *CliState) GetAuthUrl() string {
	if x != nil {
		return x.AuthUrl
	}
	return ""
}

func (x *CliState) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CliState) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *CliState) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *CliState) GetEncryptedSecret() []byte {
	if x != nil {
		return x.EncryptedSecret
	}
	return nil
}

func (x *CliState) GetEncryptedCode() []byte {
	if x != nil {
		return x.EncryptedCode
	}
	return nil
}

func (x *CliState) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CliState) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CliState) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *CliState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CliState) GetAcceptedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *CliState) GetUserProfile() map[string]string {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

type HistoryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revision      int64   `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
	User          string  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	CommitTime    float64 `protobuf:"fixed64,3,opt,name=commit_time,json=commitTime,proto3" json:"commit_time,omitempty"`
	Path          string  `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Query         string  `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	Desc          string  `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Method        string  `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	ChangeType    string  `protobuf:"bytes,8,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`
	OriginalValue string  `protobuf:"bytes,9,opt,name=original_value,json=originalValue,proto3" json:"original_value,omitempty"`
	ChangeRequest string  `protobuf:"bytes,10,opt,name=change_request,json=changeRequest,proto3" json:"change_request,omitempty"`
}

func (x *HistoryEntry) Reset() {
	*x = HistoryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryEntry) ProtoMessage() {}

func (x *HistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryEntry.ProtoReflect.Descriptor instead.
func (*HistoryEntry) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{13}
}

func (x *HistoryEntry) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *HistoryEntry) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *HistoryEntry) GetCommitTime() float64 {
	if x != nil {
		return x.CommitTime
	}
	return 0
}

func (x *HistoryEntry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HistoryEntry) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *HistoryEntry) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *HistoryEntry) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HistoryEntry) GetChangeType() string {
	if x != nil {
		return x.ChangeType
	}
	return ""
}

func (x *HistoryEntry) GetOriginalValue() string {
	if x != nil {
		return x.OriginalValue
	}
	return ""
}

func (x *HistoryEntry) GetChangeRequest() string {
	if x != nil {
		return x.ChangeRequest
	}
	return ""
}

type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	History       []*HistoryEntry `protobuf:"bytes,1,rep,name=history,proto3" json:"history,omitempty"`
	NextPageToken string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{14}
}

func (x *History) GetHistory() []*HistoryEntry {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *History) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type OidcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issuer                 string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	JwksUri                string   `protobuf:"bytes,2,opt,name=jwks_uri,proto3" json:"jwks_uri,omitempty"`
	AuthEndpoint           string   `protobuf:"bytes,3,opt,name=auth_endpoint,json=authorization_endpoint,proto3" json:"auth_endpoint,omitempty"`
	ResponseTypesSupported []string `protobuf:"bytes,4,rep,name=response_types_supported,proto3" json:"response_types_supported,omitempty"`
	TokenEndpoint          string   `protobuf:"bytes,5,opt,name=token_endpoint,proto3" json:"token_endpoint,omitempty"`
	RevocationEndpoint     string   `protobuf:"bytes,8,opt,name=revocation_endpoint,proto3" json:"revocation_endpoint,omitempty"`
	UserinfoEndpoint       string   `protobuf:"bytes,6,opt,name=userinfo_endpoint,proto3" json:"userinfo_endpoint,omitempty"`
	ScopesSupported        []string `protobuf:"bytes,7,rep,name=scopes_supported,proto3" json:"scopes_supported,omitempty"`
}

func (x *OidcConfig) Reset() {
	*x = OidcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OidcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidcConfig) ProtoMessage() {}

func (x *OidcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidcConfig.ProtoReflect.Descriptor instead.
func (*OidcConfig) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{15}
}

func (x *OidcConfig) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *OidcConfig) GetJwksUri() string {
	if x != nil {
		return x.JwksUri
	}
	return ""
}

func (x *OidcConfig) GetAuthEndpoint() string {
	if x != nil {
		return x.AuthEndpoint
	}
	return ""
}

func (x *OidcConfig) GetResponseTypesSupported() []string {
	if x != nil {
		return x.ResponseTypesSupported
	}
	return nil
}

func (x *OidcConfig) GetTokenEndpoint() string {
	if x != nil {
		return x.TokenEndpoint
	}
	return ""
}

func (x *OidcConfig) GetRevocationEndpoint() string {
	if x != nil {
		return x.RevocationEndpoint
	}
	return ""
}

func (x *OidcConfig) GetUserinfoEndpoint() string {
	if x != nil {
		return x.UserinfoEndpoint
	}
	return ""
}

func (x *OidcConfig) GetScopesSupported() []string {
	if x != nil {
		return x.ScopesSupported
	}
	return nil
}

type OidcTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string                  `protobuf:"bytes,1,opt,name=access_token,proto3" json:"access_token,omitempty"`
	TokenType    string                  `protobuf:"bytes,2,opt,name=token_type,proto3" json:"token_type,omitempty"`
	ExpiresIn    int32                   `protobuf:"varint,3,opt,name=expires_in,proto3" json:"expires_in,omitempty"`
	RefreshToken string                  `protobuf:"bytes,4,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"`
	IdToken      string                  `protobuf:"bytes,5,opt,name=id_token,proto3" json:"id_token,omitempty"`
	Scope        string                  `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	Uid          string                  `protobuf:"bytes,7,opt,name=uid,proto3" json:"uid,omitempty"`
	Info         *OidcTokenResponse_Info `protobuf:"bytes,8,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *OidcTokenResponse) Reset() {
	*x = OidcTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OidcTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidcTokenResponse) ProtoMessage() {}

func (x *OidcTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidcTokenResponse.ProtoReflect.Descriptor instead.
func (*OidcTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{16}
}

func (x *OidcTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *OidcTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *OidcTokenResponse) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *OidcTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *OidcTokenResponse) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *OidcTokenResponse) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *OidcTokenResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OidcTokenResponse) GetInfo() *OidcTokenResponse_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type Permissions_PermissionUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles map[string]int64 `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Permissions_PermissionUser) Reset() {
	*x = Permissions_PermissionUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permissions_PermissionUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions_PermissionUser) ProtoMessage() {}

func (x *Permissions_PermissionUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions_PermissionUser.ProtoReflect.Descriptor instead.
func (*Permissions_PermissionUser) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Permissions_PermissionUser) GetRoles() map[string]int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type OidcTokenResponse_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *OidcTokenResponse_Info) Reset() {
	*x = OidcTokenResponse_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_v1_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OidcTokenResponse_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidcTokenResponse_Info) ProtoMessage() {}

func (x *OidcTokenResponse_Info) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_v1_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidcTokenResponse_Info.ProtoReflect.Descriptor instead.
func (*OidcTokenResponse_Info) Descriptor() ([]byte, []int) {
	return file_proto_common_v1_common_proto_rawDescGZIP(), []int{16, 0}
}

func (x *OidcTokenResponse_Info) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OidcTokenResponse_Info) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_proto_common_v1_common_proto protoreflect.FileDescriptor

var file_proto_common_v1_common_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x79, 0x22, 0x38, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x06,
	0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x61, 0x6c, 0x6c, 0x4f, 0x66, 0x22, 0xa5, 0x02, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x72,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x11, 0x61, 0x6e, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x52,
	0x0f, 0x61, 0x6e, 0x79, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78, 0x70, 0x22, 0x5f,
	0x0a, 0x0d, 0x56, 0x69, 0x73, 0x61, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xc9, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x69, 0x73, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x09, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x73, 0x61, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd9, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b,
	0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x73, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x69, 0x73, 0x61, 0x52, 0x0d, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x69, 0x73, 0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x2d,
	0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb7, 0x02, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x67, 0x61, 0x34, 0x67, 0x68, 0x5f, 0x61, 0x73, 0x73,
	0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0f, 0x67, 0x61, 0x34, 0x67, 0x68, 0x41, 0x73, 0x73, 0x65, 0x72, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x38, 0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x73, 0x61, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x69, 0x73, 0x61, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x1a, 0x41,
	0x0a, 0x13, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x02, 0x75, 0x69, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x2e, 0x55, 0x69, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x02, 0x75, 0x69, 0x1a, 0x35, 0x0a, 0x07, 0x55, 0x69, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x03, 0x0a, 0x0b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x0e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x1a, 0x38, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x02, 0x0a, 0x0a, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4f, 0x4e, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x22, 0x5a, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x22, 0x95, 0x05, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x69, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x3e, 0x0a, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa4, 0x02, 0x0a,
	0x0c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2e,
	0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xdf, 0x02, 0x0a, 0x0a, 0x4f, 0x69, 0x64, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x72, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0xc7, 0x02, 0x0a, 0x11, 0x4f, 0x69, 0x64,
	0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x69, 0x64, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x1a, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x2d,
	0x66, 0x65, 0x64, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_common_v1_common_proto_rawDescOnce sync.Once
	file_proto_common_v1_common_proto_rawDescData = file_proto_common_v1_common_proto_rawDesc
)

func file_proto_common_v1_common_proto_rawDescGZIP() []byte {
	file_proto_common_v1_common_proto_rawDescOnce.Do(func() {
		file_proto_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_common_v1_common_proto_rawDescData)
	})
	return file_proto_common_v1_common_proto_rawDescData
}

var file_proto_common_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_common_v1_common_proto_goTypes = []interface{}{
	(LoginState_Step)(0),               // 0: common.LoginState.Step
	(*Descriptor)(nil),                 // 1: common.Descriptor
	(*Condition)(nil),                  // 2: common.Condition
	(*ConditionSet)(nil),               // 3: common.ConditionSet
	(*Assertion)(nil),                  // 4: common.Assertion
	(*VisaRejection)(nil),              // 5: common.VisaRejection
	(*RejectedVisa)(nil),               // 6: common.RejectedVisa
	(*RejectedPolicy)(nil),             // 7: common.RejectedPolicy
	(*Passport)(nil),                   // 8: common.Passport
	(*TestPersona)(nil),                // 9: common.TestPersona
	(*Permissions)(nil),                // 10: common.Permissions
	(*LoginState)(nil),                 // 11: common.LoginState
	(*TokenMetadata)(nil),              // 12: common.TokenMetadata
	(*CliState)(nil),                   // 13: common.CliState
	(*HistoryEntry)(nil),               // 14: common.HistoryEntry
	(*History)(nil),                    // 15: common.History
	(*OidcConfig)(nil),                 // 16: common.OidcConfig
	(*OidcTokenResponse)(nil),          // 17: common.OidcTokenResponse
	nil,                                // 18: common.Passport.StandardClaimsEntry
	nil,                                // 19: common.TestPersona.UiEntry
	(*Permissions_PermissionUser)(nil), // 20: common.Permissions.PermissionUser
	nil,                                // 21: common.Permissions.UsersEntry
	nil,                                // 22: common.Permissions.PermissionUser.RolesEntry
	nil,                                // 23: common.CliState.UserProfileEntry
	(*OidcTokenResponse_Info)(nil),     // 24: common.OidcTokenResponse.Info
	(*timestamppb.Timestamp)(nil),      // 25: google.protobuf.Timestamp
}
var file_proto_common_v1_common_proto_depIdxs = []int32{
	2,  // 0: common.ConditionSet.all_of:type_name -> common.Condition
	3,  // 1: common.Assertion.any_of_conditions:type_name -> common.ConditionSet
	4,  // 2: common.RejectedVisa.assertion:type_name -> common.Assertion
	5,  // 3: common.RejectedVisa.rejection:type_name -> common.VisaRejection
	6,  // 4: common.RejectedPolicy.rejected_visas:type_name -> common.RejectedVisa
	18, // 5: common.Passport.standard_claims:type_name -> common.Passport.StandardClaimsEntry
	4,  // 6: common.Passport.ga4gh_assertions:type_name -> common.Assertion
	8,  // 7: common.TestPersona.passport:type_name -> common.Passport
	19, // 8: common.TestPersona.ui:type_name -> common.TestPersona.UiEntry
	21, // 9: common.Permissions.users:type_name -> common.Permissions.UsersEntry
	0,  // 10: common.LoginState.step:type_name -> common.LoginState.Step
	25, // 11: common.CliState.created_at:type_name -> google.protobuf.Timestamp
	25, // 12: common.CliState.expires_at:type_name -> google.protobuf.Timestamp
	25, // 13: common.CliState.accepted_at:type_name -> google.protobuf.Timestamp
	23, // 14: common.CliState.user_profile:type_name -> common.CliState.UserProfileEntry
	14, // 15: common.History.history:type_name -> common.HistoryEntry
	24, // 16: common.OidcTokenResponse.info:type_name -> common.OidcTokenResponse.Info
	22, // 17: common.Permissions.PermissionUser.roles:type_name -> common.Permissions.PermissionUser.RolesEntry
	20, // 18: common.Permissions.UsersEntry.value:type_name -> common.Permissions.PermissionUser
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_common_v1_common_proto_init() }
func file_proto_common_v1_common_proto_init() {
	if File_proto_common_v1_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_common_v1_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Descriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assertion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisaRejection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectedVisa); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectedPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Passport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestPersona); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OidcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OidcTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permissions_PermissionUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_v1_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OidcTokenResponse_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_common_v1_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_v1_common_proto_goTypes,
		DependencyIndexes: file_proto_common_v1_common_proto_depIdxs,
		EnumInfos:         file_proto_common_v1_common_proto_enumTypes,
		MessageInfos:      file_proto_common_v1_common_proto_msgTypes,
	}.Build()
	File_proto_common_v1_common_proto = out.File
	file_proto_common_v1_common_proto_rawDesc = nil
	file_proto_common_v1_common_proto_goTypes = nil
	file_proto_common_v1_common_proto_depIdxs = nil
}
